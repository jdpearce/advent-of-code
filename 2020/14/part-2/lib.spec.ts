import { bitmask, runProgram, sumValues } from './lib';

describe('2020-12-14.2', () => {
  const input = `mask = 000000000000000000000000000000X1001X
mem[42] = 100
mask = 00000000000000000000000000000000X0XX
mem[26] = 1`;

  it('should apply the mask properly', () => {
    const mask = '000000000000000000000000000000X1001X';
    const address = '000000000000000000000000000000101010';

    expect(bitmask(address, mask)).toEqual([
      '000000000000000000000000000000011010',
      '000000000000000000000000000000011011',
      '000000000000000000000000000000111010',
      '000000000000000000000000000000111011',
    ]);

    const mask2 = '00000000000000000000000000000000X0XX';
    const address2 = '000000000000000000000000000000011010';

    expect(bitmask(address2, mask2)).toEqual([
      '000000000000000000000000000000010000',
      '000000000000000000000000000000010001',
      '000000000000000000000000000000010010',
      '000000000000000000000000000000010011',
      '000000000000000000000000000000011000',
      '000000000000000000000000000000011001',
      '000000000000000000000000000000011010',
      '000000000000000000000000000000011011',
    ]);
  });

  it('should run the program', () => {
    const output = runProgram(input);
    expect(sumValues(output)).toBe(208);
  });
});
